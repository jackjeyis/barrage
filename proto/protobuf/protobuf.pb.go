// Code generated by protoc-gen-go.
// source: protobuf.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	protobuf.proto

It has these top-level messages:
	Connect
	Session
	Msg
	ConnAck
*/
package protobuf

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnAckCode int32

const (
	ConnAckCode_ACCEPTED           ConnAckCode = 0
	ConnAckCode_CLIENTED_REJECTED  ConnAckCode = 1
	ConnAckCode_SERVER_UNAVAILABLE ConnAckCode = 2
	ConnAckCode_TOKEN_EXPIRY       ConnAckCode = 3
	ConnAckCode_LOGINED            ConnAckCode = 4
)

var ConnAckCode_name = map[int32]string{
	0: "ACCEPTED",
	1: "CLIENTED_REJECTED",
	2: "SERVER_UNAVAILABLE",
	3: "TOKEN_EXPIRY",
	4: "LOGINED",
}
var ConnAckCode_value = map[string]int32{
	"ACCEPTED":           0,
	"CLIENTED_REJECTED":  1,
	"SERVER_UNAVAILABLE": 2,
	"TOKEN_EXPIRY":       3,
	"LOGINED":            4,
}

func (x ConnAckCode) String() string {
	return proto1.EnumName(ConnAckCode_name, int32(x))
}
func (ConnAckCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Connect struct {
	KeepAlive int32  `protobuf:"varint,1,opt,name=keepAlive" json:"keepAlive,omitempty"`
	Token     []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	LoginType bool   `protobuf:"varint,3,opt,name=loginType" json:"loginType,omitempty"`
	ClientId  []byte `protobuf:"bytes,4,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (m *Connect) Reset()                    { *m = Connect{} }
func (m *Connect) String() string            { return proto1.CompactTextString(m) }
func (*Connect) ProtoMessage()               {}
func (*Connect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Connect) GetKeepAlive() int32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *Connect) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Connect) GetLoginType() bool {
	if m != nil {
		return m.LoginType
	}
	return false
}

func (m *Connect) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type Session struct {
	Id      int32          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MsgSize int32          `protobuf:"varint,2,opt,name=msgSize" json:"msgSize,omitempty"`
	Msgs    map[int32]*Msg `protobuf:"bytes,3,rep,name=msgs" json:"msgs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto1.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Session) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Session) GetMsgSize() int32 {
	if m != nil {
		return m.MsgSize
	}
	return 0
}

func (m *Session) GetMsgs() map[int32]*Msg {
	if m != nil {
		return m.Msgs
	}
	return nil
}

type Msg struct {
	Topic   string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto1.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Msg) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Msg) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type ConnAck struct {
	AckCode  ConnAckCode        `protobuf:"varint,1,opt,name=ackCode,enum=proto.ConnAckCode" json:"ackCode,omitempty"`
	Sessions map[int32]*Session `protobuf:"bytes,2,rep,name=sessions" json:"sessions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConnAck) Reset()                    { *m = ConnAck{} }
func (m *ConnAck) String() string            { return proto1.CompactTextString(m) }
func (*ConnAck) ProtoMessage()               {}
func (*ConnAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConnAck) GetAckCode() ConnAckCode {
	if m != nil {
		return m.AckCode
	}
	return ConnAckCode_ACCEPTED
}

func (m *ConnAck) GetSessions() map[int32]*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func init() {
	proto1.RegisterType((*Connect)(nil), "proto.Connect")
	proto1.RegisterType((*Session)(nil), "proto.Session")
	proto1.RegisterType((*Msg)(nil), "proto.Msg")
	proto1.RegisterType((*ConnAck)(nil), "proto.ConnAck")
	proto1.RegisterEnum("proto.ConnAckCode", ConnAckCode_name, ConnAckCode_value)
}

func init() { proto1.RegisterFile("protobuf.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x86, 0x2b, 0xc9, 0xaa, 0xec, 0xb1, 0x6b, 0xd4, 0xa1, 0x2d, 0xc2, 0xe4, 0x20, 0x4c, 0x0f,
	0xa6, 0x04, 0x1f, 0x5c, 0x0a, 0xa1, 0x37, 0x55, 0x5e, 0x8a, 0x1a, 0xdb, 0x09, 0x6b, 0x37, 0xb4,
	0x27, 0xe3, 0x48, 0x5b, 0xb1, 0x48, 0xd1, 0x8a, 0xac, 0x92, 0xe2, 0x3e, 0x50, 0x1f, 0xa3, 0xcf,
	0x56, 0xb4, 0x2b, 0x3b, 0x16, 0xe4, 0x24, 0xfd, 0x33, 0xff, 0xce, 0x3f, 0xdf, 0xc0, 0xb0, 0xbc,
	0x17, 0x95, 0xb8, 0x7d, 0xf8, 0x35, 0x55, 0x3f, 0x68, 0xab, 0xcf, 0xf8, 0x37, 0x38, 0xa1, 0x28,
	0x0a, 0x16, 0x57, 0x78, 0x06, 0xbd, 0x8c, 0xb1, 0x32, 0xc8, 0xf9, 0x23, 0xf3, 0x0c, 0xdf, 0x98,
	0xd8, 0xf4, 0xa9, 0x80, 0x6f, 0xc0, 0xae, 0x44, 0xc6, 0x0a, 0xcf, 0xf4, 0x8d, 0xc9, 0x80, 0x6a,
	0x51, 0xbf, 0xc9, 0x45, 0xca, 0x8b, 0xcd, 0xbe, 0x64, 0x9e, 0xe5, 0x1b, 0x93, 0x2e, 0x7d, 0x2a,
	0xe0, 0x08, 0xba, 0x71, 0xce, 0x59, 0x51, 0x45, 0x89, 0xd7, 0x51, 0xcf, 0x8e, 0x7a, 0xfc, 0xd7,
	0x00, 0x67, 0xcd, 0xa4, 0xe4, 0xa2, 0xc0, 0x21, 0x98, 0x3c, 0x69, 0x22, 0x4d, 0x9e, 0xa0, 0x07,
	0xce, 0x9d, 0x4c, 0xd7, 0xfc, 0x0f, 0x53, 0x69, 0x36, 0x3d, 0x48, 0x3c, 0x87, 0xce, 0x9d, 0x4c,
	0xa5, 0x67, 0xf9, 0xd6, 0xa4, 0x3f, 0xf3, 0x34, 0xcb, 0xb4, 0x99, 0x33, 0x5d, 0xca, 0x54, 0x92,
	0xa2, 0xba, 0xdf, 0x53, 0xe5, 0x1a, 0x85, 0xd0, 0x3b, 0x96, 0xd0, 0x05, 0x2b, 0x63, 0xfb, 0x26,
	0xa5, 0xfe, 0x45, 0x1f, 0xec, 0xc7, 0x5d, 0xfe, 0xa0, 0x43, 0xfa, 0x33, 0x68, 0xa6, 0x2d, 0x65,
	0x4a, 0x75, 0xe3, 0xb3, 0x79, 0x61, 0x8c, 0x3f, 0x81, 0xb5, 0x94, 0xa9, 0xe6, 0x2f, 0x79, 0xac,
	0x06, 0xf4, 0xa8, 0x16, 0xf5, 0xa6, 0xe5, 0x6e, 0x9f, 0x8b, 0x5d, 0xa2, 0x86, 0xf4, 0xe8, 0x41,
	0x8e, 0xff, 0x19, 0xfa, 0xb2, 0x41, 0x9c, 0xe1, 0x39, 0x38, 0xbb, 0x38, 0x0b, 0x45, 0xa2, 0xef,
	0x3a, 0x9c, 0x61, 0x13, 0xd5, 0x18, 0xea, 0x0e, 0x3d, 0x58, 0xf0, 0x02, 0xba, 0x52, 0x03, 0x49,
	0xcf, 0x54, 0x9c, 0x67, 0x6d, 0xfb, 0x81, 0xb7, 0x61, 0x3d, 0xba, 0x47, 0x97, 0xf0, 0xaa, 0xd5,
	0x7a, 0x86, 0xf9, 0x7d, 0x9b, 0x79, 0xd8, 0xbe, 0xe0, 0x09, 0xf7, 0x07, 0x0e, 0xfd, 0x93, 0xf5,
	0x70, 0x00, 0xdd, 0x20, 0x0c, 0xc9, 0xf5, 0x86, 0xcc, 0xdd, 0x17, 0xf8, 0x16, 0x5e, 0x87, 0x8b,
	0x88, 0xac, 0x36, 0x64, 0xbe, 0xa5, 0xe4, 0x1b, 0x09, 0xeb, 0xb2, 0x81, 0xef, 0x00, 0xd7, 0x84,
	0xde, 0x10, 0xba, 0xfd, 0xbe, 0x0a, 0x6e, 0x82, 0x68, 0x11, 0x7c, 0x59, 0x10, 0xd7, 0x44, 0x17,
	0x06, 0x9b, 0xab, 0x4b, 0xb2, 0xda, 0x92, 0x1f, 0xd7, 0x11, 0xfd, 0xe9, 0x5a, 0xd8, 0x07, 0x67,
	0x71, 0xf5, 0x35, 0x5a, 0x91, 0xb9, 0xdb, 0xb9, 0x7d, 0xa9, 0x96, 0xf8, 0xf8, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x12, 0x70, 0xdf, 0xb6, 0xa4, 0x02, 0x00, 0x00,
}
